Q. difference in angular js and angular 
Ans. 
   Architecture
   A. It supports the Model-View-Controller design. The view processes the information available in the model to generate the output. 	
   B. It uses components and directives. Components are the directives with a template.
   Written Language	
   A. Written in JavaScript. 	
   B. Written in Microsoft’s TypeScript language, which is a superset of ECMAScript 6 (ES6).
   Mobile support	
   A. It does not support mobile browsers. 	
   B. Angular is supported by all the popular mobile browsers.
   
Q. What are some of the advantages of Angular over other frameworks?
Ans A.  Excellent Material Design Library
   B. Efficient Problem-Solving Patterns
   C. More Lightweight Web Applications
   D. Readable and Testable Code
   E. Faster Development Process
   
Q. What’s the difference between JavaScript and ECMAScript?
Ans ECMAScript is a Standard for scripting languages such as JavaScript, JScript, etc. It is a trademark scripting language specification. 
   JavaScript is a language based on ECMAScript. A standard for scripting languages like JavaScript, JScript is ECMAScript. 
   JavaScript is considered as one of the most popular implementations of ECMAScript
Q. Tell something about the undeclared and undefined variables? 
Ans.  undeclared -> not exist, not declared
      undefined -> exist, defined but value not assigned
   
Q. latest angular version -> whats new in it -> latest angular worked on 
Q. angular project setup -> how code generate
Ans. install nodejs. npm installed by default. Then install angular by command npm install -g @angular/cli
      -g measn it will be installed globaly. for specific version npm install -g @angular/cli@8.3.19
      
Q. angular architecture 
Ans. Here’s a list of the most important files on the root folder, created by Angular CLI:
      –  package.json – containing all the packages needed for development and production
      –  tsconfig.json – containing TypeScript transpilation configuration
      –  tslint.json – containing all the rules for TypeScript static code analysis (ie. linting)
      –  angular.json – containing options for building and configuring Angular projects
      Everything else is located on the src folder, including the following:
      – index.html – as a single entry point for serving the Angular application
      – main.ts – representing the main TypeScript file for bootstrapping the application
      – styles.scss – as a globally defined cascading stylesheets (CSS) file (or any other CSS compiler file supported by the configuration)
      – app folder – containing all the Angular code
      – assets folder – containing static files (eg. images, fonts, JSON files)
      – environments folder – containing different environments used when deploying or testing the application
      
in build following files generated : 
   – main.js – containing the application-based transpiled code (what we made by ourselves)
   – polyfills.js – containing the additional code logic for supporting versions of older browsers
   – runtime.js – containing the plumbing code of Angular to run the application
   -scripts. js – with all the script code required for support styles and custom JavaScript libraries
   – styles.js – containing styles, defined by the application and from the third-party UX libraries (such as Bootstrap)
   – vendor.ts – the code that’s coming from the node_modules folder (ie. third-party libraries, including Angular itself).

Q. how many files generated in component and use of it
Ans. 4 files are generated. CSS, HTML, SPEC, TS
      A. CSS -> for style 
      B. HTML -> for display 
      C. SPEC -> The spec files are unit tests for your source files. The convention for Angular applications is to have a .spec.ts file for each .ts file. 
         They are run using the Jasmine javascript test framework through the Karma test runner (https://karma-runner.github.io/) when you use the ng test command
      D. TS -> for logics and 
   
Q.  angular code execution flow 
Ans. angular.json -> angular-cli configuration file main.ts -> Angular module bootstrap application file. 
   Set the entry module for your application. app.module.ts -> 
   Based upon your entry module, it configures which component will load first from that module and what others dependency modules, components, pipes, services.

Q. what is lazy loading and how to achieve it .
Ans. To lazy load Angular modules, use loadChildren (instead of component) in your AppRoutingModule routes. it load the defined folder when route matches.

Q. what is polyfil and why polyfil.ts is used?
Ans. Polyfills in basic language are extra lines of code which make your application compatible for different browsers. 
   The code we write is mostly in ES6(New Features: Overview and Comparison) and is not compatible with IE or firefox 
   and needs some environment setups before being able to be viewed or used in these browsers. 
   So, the polyfills takes uo the task abd do these low level setups for you.
   This file is divided into 2 sections:
   A. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
   B. Application imports. Files imported after ZoneJS should be loaded before your main file
   
Q. explain process to implement authorisation in a big application.
Ans. 

Q. what is decorator in angular : Decorators are functions that are invoked with a prefixed @ symbol, and are immediately followed by a class, method or property. 
   They allow a service, directive or filter to be changed before being used. Basically, a decorator provides configuration metadata that determines how the component, 
   class or a function should be processed, instantiated and used at runtime
  -> Types of Decorators - There are four types of decorators and each type further has its own subset of decorators
    1.class : This is the first type of decorator which tells us about a particular class’s intent and helps answer questions like whether the class is a component or a module. 
          There are various Class decorators in Angular, and among them @Component and @NgModule are widely used
    2.method : Method decorators, as the name indicates, are used to decorate the method defined inside our class with functionality
    3.property : Property decorators are used to decorate specific properties inside a class. Using a property decorator, 
           we can easily identify why we use any particular property of a class Like @Input (), @Output, @ReadOnly (), @Override ()
    4.Parameter Decorators: Parameter decorators allow us to decorate parameters in our class constructors.  
           @Inject () is a common and widely used parameter decorator. Using this decorator, we can inject services in Angular classes
 jit and eot 
 
 What is an observable?
 What is the difference between promise and observable?
    Observable	                                     Promise
    Declarative: Computation does not start until subscription so that they can be run whenever you need the result	                   Execute immediately on creation
    Provide multiple values over time	                                                                                                  Provide only one
    Subscribe method is used for error handling which makes centralized and predictable error handling	                                  Push errors to the child promises
    Provides chaining and subscription to handle complex applications	                                                                  Uses only .then() clause
 
 testing setup, process
compare two array by a single loop
compare two object 
pass by refrence 
 error when data size to big 
 promise and callback 
 observable
 dept ise sec hignest sal of employee maps
arrow function

Q. Types of CSS -> 1. Inline CSS, 2.Internal or Embedded CSS, 3.External CSS
Q. have you use SCSS. what is different in css and scss
Q. can you make a jpg design to html
Q. can you make responsive 
Q. have you used media query 
Q. different kind of selector in css

What is the advantage of collapsing white space?
How do you insert a copyright symbol on a browser page?
What are the limits of the text field size?
What are two types of Web Storage in HTML5?
Define Semantic elements in HTML
Why do we need the MathML element in HTML5 -> MathML stands for Mathematical Markup Language. It is used for displaying mathematical expressions on web pages

let var difference 
ecma 6 new 
promise nad its state 
observable 

what is auth guard?
what is arrow function? have you use it?
what is pipes? difference in pure and impur pipes
Q. Explain Components, Modules and Services in Angular
Ans. Services are plain Typescript / JavaScript class providing a very specific functionality

what is jit and eot
What is the difference between promise and observable?
what is for roor in app module
